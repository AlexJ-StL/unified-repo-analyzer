version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: unified-repo-analyzer-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CORS_ORIGIN=http://localhost
    env_file:
      - packages/backend/.env
    ports:
      - '3000:3000'
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - unified-repo-analyzer-network

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: unified-repo-analyzer-frontend
    restart: unless-stopped
    ports:
      - '80:80'
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - unified-repo-analyzer-network

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local

networks:
 unified-repo-analyzer-network:
    driver: bridge
