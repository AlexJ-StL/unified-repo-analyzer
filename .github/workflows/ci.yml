name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on ${{ matrix.os }} with ${{ matrix.runtime }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        runtime: [bun, node]
        include:
          - runtime: bun
            bun-version: latest
          - runtime: node
            node-version: "18"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        if: matrix.runtime == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Setup Node.js
        if: matrix.runtime == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies (Bun)
        if: matrix.runtime == 'bun'
        run: bun install

      - name: Install dependencies (Node)
        if: matrix.runtime == 'node'
        run: npm ci

      - name: Run tests with CI configuration (Bun)
        if: matrix.runtime == 'bun'
        run: bun run test:ci
        env:
          CI: true
          NODE_ENV: test

      - name: Run tests with CI configuration (Node)
        if: matrix.runtime == 'node'
        run: npm run test:ci
        env:
          CI: true
          NODE_ENV: test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.runtime }}
          path: |
            ci-test-results.xml
            ci-test-results.json
            coverage/

      - name: Upload coverage to Codecov
        if: matrix.runtime == 'bun' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint

      - name: Check formatting
        run: bun run format --check

  build:
    name: Build and Test Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build:prod

      - name: Run build doctor
        run: bun run build:doctor

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist/
            packages/*/build/

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Run integration tests
        run: bun run test:integration
        env:
          CI: true
          NODE_ENV: test

      - name: Run E2E tests
        run: bun run test:e2e
        env:
          CI: true
          NODE_ENV: test

      - name: Run performance tests
        run: bun run test:performance
        env:
          CI: true
          NODE_ENV: test

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run security audit
        run: bun audit

      - name: Run dependency check
        run: bun run recovery:check-env
