/**
 * Error classification system for unified-repo-analyzer
 * Provides comprehensive error categorization, correlation, and tracking
 * Requirements: 3.3, 4.5, 5.5
 */
/**
 * Error categories for comprehensive classification
 */
export var ErrorCategory;
if (!ErrorCategory) ErrorCategory = {};
((ErrorCategory) => {
  // Path-related errors
  ErrorCategory.PATH_VALIDATION = 'PATH_VALIDATION';
  ErrorCategory.PATH_ACCESS = 'PATH_ACCESS';
  ErrorCategory.PATH_FORMAT = 'PATH_FORMAT';
  ErrorCategory.PATH_PERMISSION = 'PATH_PERMISSION';
  // File system errors
  ErrorCategory.FILESYSTEM = 'FILESYSTEM';
  ErrorCategory.NETWORK = 'NETWORK';
  ErrorCategory.TIMEOUT = 'TIMEOUT';
  // System errors
  ErrorCategory.SYSTEM = 'SYSTEM';
  ErrorCategory.PLATFORM = 'PLATFORM';
  ErrorCategory.RESOURCE = 'RESOURCE';
  // Application errors
  ErrorCategory.VALIDATION = 'VALIDATION';
  ErrorCategory.CONFIGURATION = 'CONFIGURATION';
  ErrorCategory.ANALYSIS = 'ANALYSIS';
  // HTTP/API errors
  ErrorCategory.HTTP_REQUEST = 'HTTP_REQUEST';
  ErrorCategory.HTTP_RESPONSE = 'HTTP_RESPONSE';
  ErrorCategory.API_ERROR = 'API_ERROR';
  // LLM Provider errors
  ErrorCategory.LLM_PROVIDER = 'LLM_PROVIDER';
  ErrorCategory.LLM_TIMEOUT = 'LLM_TIMEOUT';
  ErrorCategory.LLM_QUOTA = 'LLM_QUOTA';
  // Legacy categories (for backward compatibility)
  ErrorCategory.BUILD = 'BUILD';
  ErrorCategory.DEPENDENCY = 'DEPENDENCY';
  ErrorCategory.TYPESCRIPT = 'TYPESCRIPT';
  ErrorCategory.RUNTIME = 'RUNTIME';
})(ErrorCategory);
/**
 * Error severity levels with detailed descriptions
 */
export var ErrorSeverity;
if (!ErrorSeverity) ErrorSeverity = {};
((ErrorSeverity) => {
  ErrorSeverity.LOW = 'LOW';
  ErrorSeverity.MEDIUM = 'MEDIUM';
  ErrorSeverity.HIGH = 'HIGH';
  ErrorSeverity.CRITICAL = 'CRITICAL';
})(ErrorSeverity);
/**
 * Error codes for specific error types
 */
export var ErrorCode;
if (!ErrorCode) ErrorCode = {};
((ErrorCode) => {
  // Path validation errors
  ErrorCode.PATH_NOT_FOUND = 'PATH_NOT_FOUND';
  ErrorCode.PATH_INVALID_FORMAT = 'PATH_INVALID_FORMAT';
  ErrorCode.PATH_TOO_LONG = 'PATH_TOO_LONG';
  ErrorCode.PATH_RESERVED_NAME = 'PATH_RESERVED_NAME';
  ErrorCode.PATH_INVALID_CHARACTERS = 'PATH_INVALID_CHARACTERS';
  ErrorCode.PATH_INVALID_DRIVE_LETTER = 'PATH_INVALID_DRIVE_LETTER';
  ErrorCode.PATH_INVALID_UNC = 'PATH_INVALID_UNC';
  ErrorCode.PATH_NULL_BYTE = 'PATH_NULL_BYTE';
  ErrorCode.PATH_CONTROL_CHARACTERS = 'PATH_CONTROL_CHARACTERS';
  ErrorCode.PATH_INVALID_COMPONENT_ENDING = 'PATH_INVALID_COMPONENT_ENDING';
  // Permission errors
  ErrorCode.PERMISSION_READ_DENIED = 'PERMISSION_READ_DENIED';
  ErrorCode.PERMISSION_WRITE_DENIED = 'PERMISSION_WRITE_DENIED';
  ErrorCode.PERMISSION_EXECUTE_DENIED = 'PERMISSION_EXECUTE_DENIED';
  ErrorCode.PERMISSION_CHECK_FAILED = 'PERMISSION_CHECK_FAILED';
  ErrorCode.PERMISSION_SYSTEM_PATH = 'PERMISSION_SYSTEM_PATH';
  ErrorCode.PERMISSION_READ_ONLY = 'PERMISSION_READ_ONLY';
  // File system errors
  ErrorCode.FILESYSTEM_NOT_DIRECTORY = 'FILESYSTEM_NOT_DIRECTORY';
  ErrorCode.FILESYSTEM_ACCESS_DENIED = 'FILESYSTEM_ACCESS_DENIED';
  ErrorCode.FILESYSTEM_DISK_FULL = 'FILESYSTEM_DISK_FULL';
  ErrorCode.FILESYSTEM_CORRUPTED = 'FILESYSTEM_CORRUPTED';
  // Network errors
  ErrorCode.NETWORK_UNREACHABLE = 'NETWORK_UNREACHABLE';
  ErrorCode.NETWORK_TIMEOUT = 'NETWORK_TIMEOUT';
  ErrorCode.NETWORK_CONNECTION_REFUSED = 'NETWORK_CONNECTION_REFUSED';
  ErrorCode.NETWORK_DNS_RESOLUTION = 'NETWORK_DNS_RESOLUTION';
  // Timeout errors
  ErrorCode.TIMEOUT_OPERATION = 'TIMEOUT_OPERATION';
  ErrorCode.TIMEOUT_PATH_VALIDATION = 'TIMEOUT_PATH_VALIDATION';
  ErrorCode.TIMEOUT_ANALYSIS = 'TIMEOUT_ANALYSIS';
  ErrorCode.TIMEOUT_LLM_REQUEST = 'TIMEOUT_LLM_REQUEST';
  // System errors
  ErrorCode.SYSTEM_RESOURCE_EXHAUSTED = 'SYSTEM_RESOURCE_EXHAUSTED';
  ErrorCode.SYSTEM_MEMORY_INSUFFICIENT = 'SYSTEM_MEMORY_INSUFFICIENT';
  ErrorCode.SYSTEM_PLATFORM_UNSUPPORTED = 'SYSTEM_PLATFORM_UNSUPPORTED';
  // Validation errors
  ErrorCode.VALIDATION_INPUT_INVALID = 'VALIDATION_INPUT_INVALID';
  ErrorCode.VALIDATION_SCHEMA_MISMATCH = 'VALIDATION_SCHEMA_MISMATCH';
  ErrorCode.VALIDATION_REQUIRED_FIELD = 'VALIDATION_REQUIRED_FIELD';
  // Configuration errors
  ErrorCode.CONFIG_MISSING = 'CONFIG_MISSING';
  ErrorCode.CONFIG_INVALID = 'CONFIG_INVALID';
  ErrorCode.CONFIG_PARSE_ERROR = 'CONFIG_PARSE_ERROR';
  // Analysis errors
  ErrorCode.ANALYSIS_FAILED = 'ANALYSIS_FAILED';
  ErrorCode.ANALYSIS_INTERRUPTED = 'ANALYSIS_INTERRUPTED';
  ErrorCode.ANALYSIS_INVALID_REPOSITORY = 'ANALYSIS_INVALID_REPOSITORY';
  // HTTP errors
  ErrorCode.HTTP_BAD_REQUEST = 'HTTP_BAD_REQUEST';
  ErrorCode.HTTP_UNAUTHORIZED = 'HTTP_UNAUTHORIZED';
  ErrorCode.HTTP_FORBIDDEN = 'HTTP_FORBIDDEN';
  ErrorCode.HTTP_NOT_FOUND = 'HTTP_NOT_FOUND';
  ErrorCode.HTTP_METHOD_NOT_ALLOWED = 'HTTP_METHOD_NOT_ALLOWED';
  ErrorCode.HTTP_CONFLICT = 'HTTP_CONFLICT';
  ErrorCode.HTTP_UNPROCESSABLE_ENTITY = 'HTTP_UNPROCESSABLE_ENTITY';
  ErrorCode.HTTP_TOO_MANY_REQUESTS = 'HTTP_TOO_MANY_REQUESTS';
  ErrorCode.HTTP_INTERNAL_SERVER_ERROR = 'HTTP_INTERNAL_SERVER_ERROR';
  ErrorCode.HTTP_BAD_GATEWAY = 'HTTP_BAD_GATEWAY';
  ErrorCode.HTTP_SERVICE_UNAVAILABLE = 'HTTP_SERVICE_UNAVAILABLE';
  ErrorCode.HTTP_GATEWAY_TIMEOUT = 'HTTP_GATEWAY_TIMEOUT';
  // LLM Provider errors
  ErrorCode.LLM_PROVIDER_UNAVAILABLE = 'LLM_PROVIDER_UNAVAILABLE';
  ErrorCode.LLM_PROVIDER_QUOTA_EXCEEDED = 'LLM_PROVIDER_QUOTA_EXCEEDED';
  ErrorCode.LLM_PROVIDER_INVALID_REQUEST = 'LLM_PROVIDER_INVALID_REQUEST';
  ErrorCode.LLM_PROVIDER_AUTHENTICATION_FAILED = 'LLM_PROVIDER_AUTHENTICATION_FAILED';
  ErrorCode.LLM_PROVIDER_RATE_LIMITED = 'LLM_PROVIDER_RATE_LIMITED';
  // Operation errors
  ErrorCode.OPERATION_CANCELLED = 'OPERATION_CANCELLED';
  ErrorCode.OPERATION_ABORTED = 'OPERATION_ABORTED';
  // Generic errors
  ErrorCode.UNKNOWN_ERROR = 'UNKNOWN_ERROR';
  ErrorCode.INTERNAL_ERROR = 'INTERNAL_ERROR';
})(ErrorCode);
//# sourceMappingURL=error-classification.js.map
